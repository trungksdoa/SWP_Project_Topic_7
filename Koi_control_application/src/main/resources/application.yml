# Application specific configs
app:

  image:
    host: https://koi-controls-e5hxekcpd0cmgjg2.eastasia-01.azurewebsites.net/api/image/
  jwt:
    secret: SecretKeyToGenJWTs
  schedule:
    task:
      update-order-status:
        cron: 0 0 1 * * ? # 1h AM

# Spring Framework configs
spring:
#  profiles:
#    active: prod
  application:
    name: Koi_control_application

  # Database config
  datasource:
    url: jdbc:postgresql://sukuna.postgres.database.azure.com:5432/koi_control?useSSL=true&requireSSL=false
    username: hashicorp_admin
    password: 123456789qQ_Group2

  # JPA config
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        format_sql: true

  # Mail config
  mail:
    host: smtp.gmail.com
    port: 587
    username: trungvhse182490@fpt.edu.vn
    password: upivsinlboafdhdr
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # File upload config
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

  # Jackson config
  jackson:
    time-zone: Asia/Ho_Chi_Minh

  # Web config
  web:
    resources:
      add-mappings: false
  cloud:
    azure:
      keyvault:
        secret:
          endpoint: https://secrect.vault.azure.net/
      profile:
        tenant-id: 447080b4-b9c6-4b0b-92fd-b543a68b4e97  # Tenant ID tá»« Azure AD
      credential:
        managed-identity:
          enabled: true

# Server configs
server:
  error:
    whitelabel:
      enabled: false

# API Documentation
springdoc:
  api-docs:
    path: /api-docs

openapi:
  service:
    title: Koi Control Application
    description: Koi Control Application
    version: 1.0.0
    contact:
      name: Koi Control Application
      email: trungksdoa@gmail.com
    api-docs: /v3/api-docs
    servers:
      prod: https://koi-controls-e5hxekcpd0cmgjg2.eastasia-01.azurewebsites.net
      dev: http://localhost:8080

# Monitoring configs
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

# Logging configs
logging:
  level:
    org.springframework.web: DEBUG
    com.product.server.koi_control_application: DEBUG
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE